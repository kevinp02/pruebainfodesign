// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaInfodesign.Infrastructure.Data;

#nullable disable

namespace PruebaInfodesign.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaInfodesign.Domain.Entities.Linea", b =>
                {
                    b.Property<int>("LineaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineaId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoLinea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("LineaId");

                    b.HasIndex("CodigoLinea")
                        .IsUnique()
                        .HasDatabaseName("IX_Lineas_CodigoLinea");

                    b.ToTable("Lineas", (string)null);
                });

            modelBuilder.Entity("PruebaInfodesign.Domain.Entities.RegistroConsumo", b =>
                {
                    b.Property<long>("RegistroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RegistroId"));

                    b.Property<decimal>("ConsumoWh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("CostoUnitario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,6)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("LineaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PorcentajePerdida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("TipoClienteId")
                        .HasColumnType("int");

                    b.HasKey("RegistroId");

                    b.HasIndex("Fecha")
                        .HasDatabaseName("IX_RegistroConsumo_Fecha");

                    b.HasIndex("LineaId", "Fecha")
                        .HasDatabaseName("IX_RegistroConsumo_LineaFecha");

                    b.HasIndex("TipoClienteId", "Fecha")
                        .HasDatabaseName("IX_RegistroConsumo_TipoClienteFecha");

                    b.HasIndex("Fecha", "LineaId", "TipoClienteId")
                        .HasDatabaseName("IX_RegistroConsumo_FechaCompleto");

                    b.ToTable("RegistrosConsumo", null, t =>
                        {
                            t.HasCheckConstraint("CK_ConsumoPositivo", "[ConsumoWh] >= 0");

                            t.HasCheckConstraint("CK_CostoPositivo", "[CostoUnitario] >= 0");

                            t.HasCheckConstraint("CK_PerdidaValida", "[PorcentajePerdida] >= 0 AND [PorcentajePerdida] <= 100");
                        });
                });

            modelBuilder.Entity("PruebaInfodesign.Domain.Entities.TipoCliente", b =>
                {
                    b.Property<int>("TipoClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoClienteId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoClienteId");

                    b.HasIndex("NombreTipo")
                        .IsUnique()
                        .HasDatabaseName("IX_TiposCliente_Nombre");

                    b.ToTable("TiposCliente", (string)null);

                    b.HasData(
                        new
                        {
                            TipoClienteId = 1,
                            Descripcion = "Clientes residenciales o domésticos",
                            NombreTipo = "Residencial"
                        },
                        new
                        {
                            TipoClienteId = 2,
                            Descripcion = "Clientes comerciales y empresariales",
                            NombreTipo = "Comercial"
                        },
                        new
                        {
                            TipoClienteId = 3,
                            Descripcion = "Clientes industriales de alto consumo",
                            NombreTipo = "Industrial"
                        });
                });

            modelBuilder.Entity("PruebaInfodesign.Domain.Entities.RegistroConsumo", b =>
                {
                    b.HasOne("PruebaInfodesign.Domain.Entities.Linea", "Linea")
                        .WithMany("Registros")
                        .HasForeignKey("LineaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RegistroConsumo_Linea");

                    b.HasOne("PruebaInfodesign.Domain.Entities.TipoCliente", "TipoCliente")
                        .WithMany("Registros")
                        .HasForeignKey("TipoClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RegistroConsumo_TipoCliente");

                    b.Navigation("Linea");

                    b.Navigation("TipoCliente");
                });

            modelBuilder.Entity("PruebaInfodesign.Domain.Entities.Linea", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("PruebaInfodesign.Domain.Entities.TipoCliente", b =>
                {
                    b.Navigation("Registros");
                });
#pragma warning restore 612, 618
        }
    }
}
